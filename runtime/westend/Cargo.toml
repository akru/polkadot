[package]
name = "westend-runtime"
version = "0.8.19"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"
build = "build.rs"

[dependencies]
bitvec = { version = "0.17.4", default-features = false, features = ["alloc"] }
codec = { package = "parity-scale-codec", version = "1.3.0", default-features = false, features = ["derive"] }
log = { version = "0.3.9", optional = true }
rustc-hex = { version = "2.0.1", default-features = false }
serde = { version = "1.0.102", default-features = false }
serde_derive = { version = "1.0.102", optional = true }
smallvec = "1.4.1"
static_assertions = "1.1.0"

authority-discovery-primitives = { package = "sp-authority-discovery", version = "2.0.0-rc5", default-features = false }
babe-primitives = { package = "sp-consensus-babe", version = "0.8.0-rc5", default-features = false }
sp-api = { version = "2.0.0-rc5", default-features = false }
inherents = { package = "sp-inherents", version = "2.0.0-rc5", default-features = false }
offchain-primitives = { package = "sp-offchain", version = "2.0.0-rc5", default-features = false }
sp-std = { package = "sp-std", version = "2.0.0-rc5", default-features = false }
sp-io = { version = "2.0.0-rc5", default-features = false }
sp-runtime = { version = "2.0.0-rc5", default-features = false }
sp-staking = { version = "2.0.0-rc5", default-features = false }
sp-core = { version = "2.0.0-rc5", default-features = false }
sp-session = { version = "2.0.0-rc5", default-features = false }
version = { package = "sp-version", version = "2.0.0-rc5", default-features = false }
tx-pool-api = { package = "sp-transaction-pool", version = "2.0.0-rc5", default-features = false }
block-builder-api = { package = "sp-block-builder", version = "2.0.0-rc5", default-features = false }

authority-discovery = { package = "pallet-authority-discovery", version = "2.0.0-rc5", default-features = false }
authorship = { package = "pallet-authorship", version = "2.0.0-rc5", default-features = false }
babe = { package = "pallet-babe", version = "2.0.0-rc5", default-features = false }
balances = { package = "pallet-balances", version = "2.0.0-rc5", default-features = false }
transaction-payment = { package = "pallet-transaction-payment", version = "2.0.0-rc5", default-features = false }
transaction-payment-rpc-runtime-api = { package = "pallet-transaction-payment-rpc-runtime-api", version = "2.0.0-rc5", default-features = false }
collective = { package = "pallet-collective", version = "2.0.0-rc5", default-features = false }
democracy = { package = "pallet-democracy", version = "2.0.0-rc5", default-features = false }
elections-phragmen = { package = "pallet-elections-phragmen", version = "2.0.0-rc5", default-features = false }
executive = { package = "frame-executive", version = "2.0.0-rc5", default-features = false }
finality-tracker = { package = "pallet-finality-tracker", version = "2.0.0-rc5", default-features = false }
grandpa = { package = "pallet-grandpa", version = "2.0.0-rc5", default-features = false }
identity = { package = "pallet-identity", version = "2.0.0-rc5", default-features = false }
im-online = { package = "pallet-im-online", version = "2.0.0-rc5", default-features = false }
indices = { package = "pallet-indices", version = "2.0.0-rc5", default-features = false }
membership = { package = "pallet-membership", version = "2.0.0-rc5", default-features = false }
multisig = { package = "pallet-multisig", version = "2.0.0-rc5", default-features = false }
nicks = { package = "pallet-nicks", version = "2.0.0-rc5", default-features = false }
offences = { package = "pallet-offences", version = "2.0.0-rc5", default-features = false }
proxy = { package = "pallet-proxy", version = "2.0.0-rc5", default-features = false }
randomness-collective-flip = { package = "pallet-randomness-collective-flip", version = "2.0.0-rc5", default-features = false }
recovery = { package = "pallet-recovery", version = "2.0.0-rc5", default-features = false }
scheduler = { package = "pallet-scheduler", version = "2.0.0-rc5", default-features = false }
session = { package = "pallet-session", version = "2.0.0-rc5", default-features = false }
society = { package = "pallet-society", version = "2.0.0-rc5", default-features = false }
frame-support = { version = "2.0.0-rc5", default-features = false }
staking = { package = "pallet-staking", version = "2.0.0-rc5", default-features = false }
pallet-staking-reward-curve = { package = "pallet-staking-reward-curve", version = "2.0.0-rc5" }
sudo = { package = "pallet-sudo", version = "2.0.0-rc5", default-features = false }
system = { package = "frame-system", version = "2.0.0-rc5", default-features = false }
system_rpc_runtime_api = { package = "frame-system-rpc-runtime-api", version = "2.0.0-rc5", default-features = false }
timestamp = { package = "pallet-timestamp", version = "2.0.0-rc5", default-features = false }
treasury = { package = "pallet-treasury", version = "2.0.0-rc5", default-features = false }
utility = { package = "pallet-utility", version = "2.0.0-rc5", default-features = false }
vesting = { package = "pallet-vesting", version = "2.0.0-rc5", default-features = false }

frame-benchmarking = { version = "2.0.0-rc5", default-features = false, optional = true }
frame-system-benchmarking = { version = "2.0.0-rc5", default-features = false, optional = true }
pallet-offences-benchmarking = { version = "2.0.0-rc5", default-features = false, optional = true }
pallet-session-benchmarking = { version = "2.0.0-rc5", default-features = false, optional = true }
hex-literal = { version = "0.2.1" }

runtime-common = { package = "polkadot-runtime-common", path = "../common", default-features = false }
primitives = { package = "polkadot-primitives", path = "../../primitives", default-features = false }
polkadot-parachain = { path = "../../parachain", default-features = false }

[dev-dependencies]
hex-literal = "0.2.1"
libsecp256k1 = "0.3.2"
tiny-keccak = "1.5.0"
keyring = { package = "sp-keyring", version = "2.0.0-rc5" }
sp-trie = "2.0.0-rc5"
serde_json = "1.0.41"

[build-dependencies]
wasm-builder-runner = { package = "substrate-wasm-builder-runner", version = "1.0.6" }

[features]
default = ["std"]
no_std = []
only-staking = []
std = [
	"authority-discovery-primitives/std",
	"authority-discovery/std",
	"bitvec/std",
	"primitives/std",
	"rustc-hex/std",
	"codec/std",
	"inherents/std",
	"sp-core/std",
	"polkadot-parachain/std",
	"sp-api/std",
	"tx-pool-api/std",
	"block-builder-api/std",
	"offchain-primitives/std",
	"sp-std/std",
	"sp-io/std",
	"frame-support/std",
	"authorship/std",
	"balances/std",
	"transaction-payment/std",
	"transaction-payment-rpc-runtime-api/std",
	"collective/std",
	"elections-phragmen/std",
	"democracy/std",
	"executive/std",
	"finality-tracker/std",
	"grandpa/std",
	"identity/std",
	"im-online/std",
	"indices/std",
	"membership/std",
	"multisig/std",
	"nicks/std",
	"offences/std",
	"proxy/std",
	"recovery/std",
	"sp-runtime/std",
	"sp-staking/std",
	"scheduler/std",
	"session/std",
	"society/std",
	"staking/std",
	"sudo/std",
	"system/std",
	"system_rpc_runtime_api/std",
	"timestamp/std",
	"treasury/std",
	"version/std",
	"utility/std",
	"vesting/std",
	"serde_derive",
	"serde/std",
	"log",
	"babe/std",
	"babe-primitives/std",
	"sp-session/std",
	"randomness-collective-flip/std",
	"runtime-common/std",
]
runtime-benchmarks = [
	"runtime-common/runtime-benchmarks",
	"frame-benchmarking",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking",
	"system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"balances/runtime-benchmarks",
	"collective/runtime-benchmarks",
	"democracy/runtime-benchmarks",
	"elections-phragmen/runtime-benchmarks",
	"identity/runtime-benchmarks",
	"im-online/runtime-benchmarks",
	"scheduler/runtime-benchmarks",
	"society/runtime-benchmarks",
	"staking/runtime-benchmarks",
	"timestamp/runtime-benchmarks",
	"treasury/runtime-benchmarks",
	"utility/runtime-benchmarks",
	"vesting/runtime-benchmarks",
	"pallet-offences-benchmarking",
	"pallet-session-benchmarking",
	# uncomment when it is made optional again
	# "hex-literal",
]
# When enabled, the runtime api will not be build.
#
# This is required by Cumulus to access certain types of the
# runtime without clashing with the runtime api exported functions
# in WASM.
disable-runtime-api = []
